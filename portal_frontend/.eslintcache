[{"/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/index.js":"1","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/App.js":"2","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/exams.js":"3","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/components/loginForm.js":"4","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/login.js":"5","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/register.js":"6","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/components/addExam.js":"7"},{"size":222,"mtime":1634712436084,"results":"8","hashOfConfig":"9"},{"size":1790,"mtime":1635064247326,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1635060009493,"results":"11","hashOfConfig":"9"},{"size":4442,"mtime":1635061801681,"results":"12","hashOfConfig":"9"},{"size":196,"mtime":1634874557803,"results":"13","hashOfConfig":"9"},{"size":200,"mtime":1634874546847,"results":"14","hashOfConfig":"9"},{"size":1699,"mtime":1635064150779,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6wvp11",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/index.js",[],["36","37"],"/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/App.js",["38","39"],"/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/exams.js",["40"],"import axios from 'axios'\nconst baseURL = '/api/exams'\n\nlet token = null\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getExams = async () => {\n    const response = await axios.get(baseURL)\n    return response.data\n}\n\nconst createExam = async newObject => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseURL, newObject, config)\n    return response.data\n}\n\nexport default { getExams, createExam, setToken }\n","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/components/loginForm.js",["41","42","43"],"import React from 'react'\nimport { useRef, useState } from 'react';\nimport loginService from '../services/login'\nimport registerService from '../services/register'\n\n\n\nconst LoginForm = ({ username, setUsername, password, setPassword, setUser }) => {\n\n    \n\n    const [loginState, setLoginState] = useState(true)\n    const [newUserName, setNewUserName] = useState('')\n    const [newName, setNewName] = useState('')\n    const [newUserpassword, setNewpassword] = useState('')\n    const [newProfession, setnewProfession] = useState('')\n    const [newEmail, setEmail] = useState('')\n\n\n    const onRegister = () => {\n        setLoginState(false)\n    }\n\n    const onLogin = () => {\n        setLoginState(true)\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n\n            const user = await loginService\n                .login({ username, password })\n\n            window.localStorage.setItem(\n                'loggedinUser', JSON.stringify(user)\n            )\n            setUser(user)\n            setUsername('')\n            setPassword('')\n            console.log(user.username, 'logged in!')\n\n        }\n        catch {\n            console.log('Wrong Credentials')\n        }\n    }\n\n    const handleRegister = async (event) => {\n        event.preventDefault()\n\n        const newUserBody = {\n            exams: [],\n            username: newUserName,\n            name: newName,\n            password: newUserpassword,\n            profession: newProfession,\n            email: newEmail\n        }\n        const demo = {\n            exams: [],\n            username: \"Beck\",\n            name: \"Beck P\",\n            password: \"Beck\",\n            profession: \"Professor\",\n            email: \"beck123@gmail.com\"\n        }\n        try {\n            const newRegisteredUser = await registerService\n                .register(newUserBody)\n            setNewUserName('')\n            setNewName('')\n            setPassword('')\n            setEmail('')\n            setnewProfession('')\n        }\n        catch {\n            console.log('unable to register')\n        }\n\n    }\n\n    const SignInform = () => {\n        return (\n            <form id=\"login\" className=\"input-group\" onSubmit={handleLogin}>\n                <input type=\"text\" value={username} className=\"input-field\" placeholder=\"User ID\" required onChange={({ target }) => setUsername(target.value)} />\n                <input type=\"password\" value={password} className=\"input-field\" placeholder=\"Password\" required onChange={({ target }) => setPassword(target.value)} />\n                <input type=\"checkbox\" className=\"checkbox\" /><span>Remember me</span>\n                <button type=\"submit\" className=\"submit-btn\">Login</button>\n            </form>\n        )\n    }\n    const SignUpForm = () => {\n        return (\n            <form id=\"register\" className=\"input-group\" onSubmit={handleRegister}>\n                <input type=\"email\" className=\"input-field\" placeholder=\"Email ID\" required onChange={({ target }) => setEmail(target.value)} />\n                <input type=\"text\" className=\"input-field\" placeholder=\"User Name\" required onChange={({ target }) => setNewUserName(target.value)} />\n                <input type=\"text\" className=\"input-field\" placeholder=\"Full Name\" required onChange={({ target }) => setNewName(target.value)} />\n                <input type=\"text\" className=\"input-field\" placeholder=\"Profession\" required onChange={({ target }) => setnewProfession(target.value)} />\n                <input type=\"password\" className=\"input-field\" placeholder=\"Password\" required onChange={({ target }) => setNewpassword(target.value)} />\n                <input type=\"checkbox\" className=\"checkbox\" /><span>Remember me</span>\n                <button type=\"submit\" className=\"submit-btn\">Register</button>\n            </form>\n        )\n    }\n\n    return (\n        <div className=\"hero\">\n            <div className=\"form-box\">\n                <div className=\"button-box\">\n                    <div id=\"btn\" style={{ left: loginState ? '0px' : '110px' }}></div>\n                    <button type=\"button\" className=\"toggle-btn\" onClick={onLogin}>Log In</button>\n                    <button type=\"button\" className=\"toggle-btn\" onClick={onRegister}>Register</button>\n                </div>\n                {loginState && SignInform()}\n                {!loginState && SignUpForm()}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default LoginForm","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/login.js",["44"],"import axios from \"axios\";\nconst baseURL = '/api/login'\n\nconst login = async (creds) => {\n    const response = await axios.post(baseURL, creds)\n    return response.data\n}\n\nexport default { login }","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/services/register.js",["45"],"import axios from \"axios\";\nconst baseURL = '/api/users'\n\nconst register = async (creds)  =>{\n    const response = await axios.post(baseURL, creds)\n    return response.data\n}\n\nexport default {register}","/home/shreshtha13/workSpace/WhateverI'mExperimenting/student_portal/portal_frontend/src/components/addExam.js",["46","47"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport examService from '../services/exams'\n\n\nconst AddExam = ({user}) => {\n    const [subject, setSubject] = useState('')\n    const [syllabus, setsyllabus] = useState('')\n    const [date, setDate] = useState('')\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const newExam  = {\n            subject : subject,\n            syllabus : syllabus,\n            date : date,\n        }\n        // console.log(newExam);\n\n        try{\n          const addNewExam = await examService\n            .createExam(newExam)\n\n            console.log(addNewExam)\n            \n        }\n        catch{\n            console.log('Unable to add exam. Try again later!')\n        }\n    }\n\n    return (\n        <div>\n            <form className='create-exam-form'>\n                <input type='text' value={subject} placeholder='Subject' className='exam-input' required onChange={({ target }) => setSubject(target.value)}></input>\n                <input type='text' value={syllabus} placeholder='Syllabus' className='exam-input' required onChange={({ target }) => setsyllabus(target.value)}></input>\n                <input type='date' value={date} placeholder='Date' className='exam-input' required onChange={({ target }) => setDate(target.value)}></input>\n                {/* <input type='text' value={user.profession} placeholder='Professor' className='exam-input' required onChange={({ target }) => setnewExam({ newExam: { Professor: target.value } })}></input> */}\n                <button onClick={handleSubmit} type='submit'>submit</button>\n            </form>\n        </div>\n    )\n\n\n}\n\nexport default AddExam",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":20},{"ruleId":"52","severity":1,"message":"56","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":23,"column":1,"nodeType":"59","endLine":23,"endColumn":50},{"ruleId":"52","severity":1,"message":"60","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"52","severity":1,"message":"61","line":61,"column":15,"nodeType":"54","messageId":"55","endLine":61,"endColumn":19},{"ruleId":"52","severity":1,"message":"62","line":70,"column":19,"nodeType":"54","messageId":"55","endLine":70,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":9,"column":1,"nodeType":"59","endLine":9,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":9,"column":1,"nodeType":"59","endLine":9,"endColumn":26},{"ruleId":"52","severity":1,"message":"63","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"64","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":13},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'loginService' is defined but never used.","Identifier","unusedVar","'exams' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","'demo' is assigned a value but never used.","'newRegisteredUser' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]